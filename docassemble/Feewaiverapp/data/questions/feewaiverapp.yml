---
include:
  - docassemble.AssemblyLine:assembly_line.yml
  - custom_ptla_theme_ngb.yml
  - mainefinancialaffidavit.yml
---
default screen parts:
  footer: |
    [:share-alt-square: Share](${ url_ask([{'undefine': ['al_sharing_type','al_how_share_link']}, 'al_share_form_screen', {'recompute': ['al_did_share_form']}, 'al_share_results']) })
    [:info-circle: About](${ url_action('about_this_interview') })
    [:comment-dots: Feedback](https://forms.office.com/Pages/ResponsePage.aspx?id=gOsuS1HkzESOjJ_IxTUKuMd_2zPCiBNIvwzVGRoYK5FUNDVPQVFVODVCSFBWNVZWMzJFNVRZQzRDMC4u){:target="_blank"}
---
objects:
  - users: ALPeopleList.using(there_are_any=True)
  - court_list: ALCourtLoader.using(file_name='ptlacourtaddresstest.xlsx')
---
modules:
  - docassemble.GithubFeedbackForm.github_issue
---
code: |
  court_data = court_list._load_courts() 
---
features:
  css: 
    - ptlatheme.css
---    
metadata:
  title: |
    Maine Fee Waiver Application
  short title: |
    Maine Fee Waiver
  tags:
    - Other
  authors:
    - Pine Tree Legal Assistance
---
mandatory: True
comment: |
  Global interview metadata
variable name: interview_metadata["feewaiverapp"]
data:
  al_weaver_version: "1.8.0"
  generated on: "2023-01-09"
  title: >-
    Maine Fee Waiver Application
  short title: >-
    Maine Fee Waiver
  description: |-
    This interview will complete Maine Judicial Branch Form CV-067, the Application to Proceed without Payment of Fees and the required Financial Affidavit, Form CV-191.
  original_form: >-
    https://mjbportal.courts.maine.gov/CourtForms/FormsLists/DownloadForm?strFormNumber=CV-067
  allowed courts: 
    - "District Court"
    - "Superior Court"
  categories:
    - "Fee waiver"
    - "application to proceed without payment of fees"
  typical role: "unknown"
  generate download screen: True
---
code: |
  interview_metadata['main_interview_key'] =  'feewaiverapp'
---
code: |
  # This controls the default country and list of states in address field questions
  AL_DEFAULT_COUNTRY = "US"
---
code: |
  # This controls the default state in address field questions
  AL_DEFAULT_STATE = "ME"
---
code: |
  github_repo_name =  'docassemble-Feewaiverapp'
---
code: |
  interview_short_title = "Ask the court for a fee waiver"
---
code: |
  al_form_type = "existing_case" 
---
objects:
  - users: ALPeopleList.using(there_are_any=True)
---
sections:
  - review_feewaiverapp: Review your answers
---
template: PTLA_terms_of_use
content: |
  ## Pine Tree Legal Assistance's Terms of Use and Privacy Policy

  This website is free to use.
  Pine Tree Legal Assistance hosts this site.

  ### You need to know

  * This website does not provide legal advice. If you need legal advice, contact a lawyer.
  * The information and documents on this website have no warranty. We provide the information “as-is.” By using the site, you agree not to hold Pine Tree Legal Assistance or the information providers on this site liable.
  * We work hard to keep the information on the site up to date. Lawyers drafted and reviewed the documents this site uses. But laws and local rules change over time. These changes can make a document unenforceable when you use it.
  * We do our best to keep the site working! To do that, we allow you to submit feedback so we can track problems on the site. But we cannot provide individual technical support. 

  ### To use this site

  * You need to be over 13 to use this site. 
  * This site is for anyone 13 and over. For example: you can be the person who needs the help, a lawyer, or a social worker.
  * You may not sell the information or the contents of this site. But you can charge for your own time. 
  * Please keep your use fair. Do not use this site in a way that is illegal or that makes it harder for other people to use.

  ### Information we and others collect

  * We collect the information that you type to help you complete your forms. We delete all information 180 days after you last update it. You can also delete information immediately.
  * We log information including IP addresses and web browsers from all visitors. We use this information to keep our site secure. We keep logs for up to 180 days.
  * We use Google Analytics to learn how people use our website. This helps us understand which pages are hardest to use. Google may use this information to show you better advertisements.
  * We use email and text message delivery services that may keep their own records of any messages you send. If you choose to log in with your phone number, this may include a record of the times you log in to the site.

  ### We keep your information safe

  * We use the same technology that banks and online stores use to keep your information safe. 
  * We use:
    * 256 bit encryption
    * Continual monitoring
    * Limited access controls
    * Regular security updates
    * Software firewalls

  ### Sharing your information

  * We never sell your information.
  * We share anonymous information with a small number of nonprofits and researchers. We use the information to improve our site and to improve free legal help in Maine.
  * When you visit some pages of the site, the site may ask if you want to apply to get a free lawyer from legal aid. You get to decide if you want to share your personal information.
  * You may choose to email completed forms or share a link to your in-progress work at any time to any person.

  ### These terms of use can change

  * We may change these Terms of Use at any time with no notice. Please review the terms on a regular basis to see any changes.
  * If you use the site after we make changes, you accept our changed Terms of Use.

  The laws of Maine apply to these Terms of Use.

  If a judge decides that one of the terms in this Terms of Use is unenforceable, it will not change the terms that remain.

  ### If you still have questions

  If you would like to access, correct, amend, or delete any personal information we have about you or have any other questions, contact us at: 

  Pine Tree Legal Assistance

  88 Federal Street
  Portland, ME 04101

  webadmin@ptla.org
---
#################### Interview order #####################
comment: |
  Controls order and branching logic for questions specific to this form
id: interview_order_feewaiverapp
code: |
  #county_output
  # Set the allowed courts for this interview
  allowed_courts = interview_metadata["feewaiverapp"]["allowed courts"]
  nav.set_section("review_feewaiverapp")
  # Below sets the user_role and user_ask_role by asking a question.
  # You can set user_ask_role directly instead to either 'plaintiff' or 'defendant'
  Introduction
  user_ask_role
  user_is_plaintiff
  court_selection
  court_district
  court_town
  court_data
  #court_county
  docket_number
  set_progress(16)
  filing_fee
  if service_costs == True:
    no_service_by_mail
    if no_service_by_mail == True:
      no_service_by_mail_reason
  defendants.gather()
  plaintiffs.gather()
  set_progress(32)
  signature_date
  set_progress(48)
  users[0].address.address
  #user_email
  set_progress(64)
  financial_affidavit_done
  feewaiverapp_preview_question
  set_progress(96)
  user_signature
  interview_order_feewaiverapp = True
---
###################### Main order ######################
comment: |
  This block includes the logic for standalone interviews.
  Delete mandatory: True to include in another interview
mandatory: True
code: |
  al_intro_screen
  feewaiverapp_intro
  interview_order_feewaiverapp
  signature_date
  # Store anonymous data for analytics / statistics
  store_variables_snapshot(
      persistent=True,
      data={
          "zip": showifdef("users[0].address.zip"),
          "reached_interview_end": True,
      },
  )
  feewaiverapp_download
---
id: basic questions intro screen
#decoration: form-lineal
question: |
  ${interview_short_title}: Pine Tree Legal Forms Project
subquestion: |
  % if form_approved_for_email_filing:
   <br /> This website can help you complete and file court forms in 3 steps:
  % else:
  This website can help you complete and download forms in 3 steps:
  % endif
  
  Step 1. Answer questions that will fill in your form for you.   
  Step 2. Preview the completed form.   
  % if form_approved_for_email_filing:  
  Step 3. Email the form to the court using this secure website and save copies for yourself for later reference.   
  % elif al_form_type in ['starts_case','existing_case','appeal']:
  Step 3. Download and print the final form. You will need to deliver it
  to the court on your own. 
  % else:
  Step 3. Download and print the final form. You will need to sign the Financial Affidavit and have it notarized, and deliver it 
  on your own. 
  % endif
  
  This site is not a lawyer. If you need legal help and your legal issue is in Maine, you can [contact Pine Tree Legal Assistance](https://ptla.org/contact-us) If you or your legal problem are outside of the state of Maine, find [your local
  legal aid provider](https://www.lsc.gov/what-legal-aid/find-legal-aid).

  ${ display_template(PTLA_terms_of_use, scrollable=True, collapse=False) }

fields:
  # This points to a terms of use in this package which you can edit.
  # If you prefer, you can link to a static website by deleting everything
  # in the ${ } tags and replacing with a static website, like 
  # https://example.com/tos
  - To continue, you must accept our terms of use: acknowledged_information_use
    datatype: checkboxes
    none of the above: False    
    minlength: 1
    choices:
      - I accept the terms of use.: I accept
    validation messages:
      minlength: |
        You cannot continue unless you agree to the terms of use.        
continue button field: al_intro_screen
---
comment: |
  This question is used to introduce your interview. Please customize
id: Maine_Fee_Waiver_Application
continue button field: feewaiverapp_intro
question: |
  Maine Fee Waiver Application
subquestion: |
  You can use this Maine Fee Waiver Form Interview to ask the court to waive fees like the filing fee, mediation fee, or other court costs if you cannot afford to pay them. 
  
  This tool will walk you through filling out Maine Form CV-067 'Application to Proceed Without Payment of Fees' (often called a 'fee waiver') and Maine Form CV-191 'Financial Affidavit.' These are the two forms you will need to ask the court for a fee waiver. 
  
  There will be instructions at the end about what to do next with these forms!
---
id: Introduction
question: |
  What you will need to complete these forms
subquestion: |
  Before you begin, you should gather any documents that will help you answer these questions. For these forms you will need information about:
  <ul>
  <li>The court case you need the fee waiver for, including the names of other people involved in the court case, and the docket number if there is one.</li>
  <li>Your income, including information about your employer, or any public benefits you get.</li>
  <li>Your expenses, for things like housing, food, other bills, and debts you are paying.</li>
  <li>Your assets - things you own that have cash value - including bank accounts, vehicles, and other items worth $250 or more.</li>
  <li>Your living situation, and if you share expenses with the people you live with.</li>
  <li>Any child support you pay or get.</li>
  </ul>
  We will only ask questions needed to complete these forms.
continue button field: Introduction
---
#id: About You
#question: |
#  About You
#subquestion: |
#  We need to know a little bit about you and your role in this court case.
#fields:
#  - "Did you start this court case?": user_is_plaintiff
#    datatype: yesno
#  - "Are you responding to a court case someone else started?": user_is_defendant
#    datatype: yesno
---
code: |
  if user_ask_role == "plaintiff":
    user_is_defendant = False
    user_is_plaintiff = True
  else: 
    user_is_defendant = True
    user_is_plaintiff = False
---
#id: Court location town
#question: |
#fields:  
#  - What is the name of the town where the court is located?: court_town
#    code: court_list._load_courts()["address_town"].unique()
#id: About Your Case
#question: |
#  About Your Case
#subquestion: |
#  We need to know a bit more about the case you are involved in.
#fields:
#  - "Is this court case in Superior Court?": court_superior
#    datatype: yesno
#  - "Is this court case in District Court?": court_district
#    datatype: yesno 
#  - "What is the name of the town where the court is located?": court_town
#    maxlength: 21  
#  - What is the name of the town where the court is located?: court_town
#    code: court_list._load_courts()["address_town"].unique()
---
#id: court county
#question: |
#  What is the name of the Maine county where the court is located?
#field: court_county
#dropdown: 
#  - "Androscoggin"
#  - "Aroostook"
#  - "Cumberland"
#  - "Franklin"
#  - "Hancock"
#  - "Kennebec"
#  - "Knox"
#  - "Lincoln"
#  - "Oxford"
#  - "Penobscot"
#  - "Piscataquis" 
#  - "Sagadahaoc"
#  - "Somerset"
#  - "Waldo"
#  - "Washington"
#  - "York"
---
question: |
  Is this case in District Court?
field: court_selection
buttons:
  - "Yes, it's in District Court": True
  - "No, it's in Superior Court": False
---
code: |
  if court_selection == True:
    court_district = True
    court_superior = False
  else:
    court_district = False
    court_superior = True
---
id: Fee Waiver Request
question: |
  Fee Waiver Request
subquestion: |
  Which court fees and costs are you asking the court to waive?
fields:
  - "Filing Fee": filing_fee
    datatype: yesno
  - "Service Costs": service_costs
    datatype: yesno
  - "Mediation Fee": mediation_fee
    datatype: yesno
  - "Jury Fee": jury_fee
    datatype: yesno
  - "Appeal Fee": appeal_fee
    datatype: yesno
  - "I need a different cost or fee waived": other_fee
    datatype: yesno
  - "Please describe the other fees or costs you need the court to waive.": other_fee_description
    show if: other_fee
    maxlength: 42
---
id: service by mail
question: |
  Are you asking the court to pay the cost of service without first trying service by mail?
yesno: no_service_by_mail
---
id: service by mail take two
question: |
  Please explain why you are asking the court to pay service fees without first trying service by mail. 
fields: 
  - Reasons for not trying service by mail: no_service_by_mail_reason
    input type: area
    maxlength: 270 
---
id: contact info
question: |
  How can the court reach you about this matter?
fields:
  - Phone number where you can be reached: user_phone_number
    datatype: integer
    required: False
  - Email address: user_email
    datatype: email
    required: False
---
id: Signature test
question: |
  Sign your Application to Proceed Without Payment of Fees
subquestion: |
  By signing your name, you are saying that: 
  <ol>
  <li>The information on this form is true.</li> 
  <li>You are filing this in good faith.</li> 
  <li>You are not able to pay the fees you have asked to have waived.</li> 
  <li>If you become able to pay those fees while this case is going on, or if you win a settlement, that you will pay any fees that were waived.</li> 
signature: user_signature
under: |
  ${ "Sign your name here" }
---
id: preview feewaiverapp
question: |
  Preview your Maine Application to Proceed Without Payment of Fees and Maine Financial Affidavit forms before you sign the Application. 
subquestion: |
  Remember, you will need to review the terms and sign your Financial Affidavit in front of a notary before you can file!
  
  Here is a preview of the forms.   
  
  ${ al_court_bundle.as_pdf(key='preview') }

  Click the image to open it in a new tab. Click the "Edit answers" button
  to edit your answers.

  ${ action_button_html(url_action('review_feewaiverapp'), label='Edit answers', color='info') }
  
  Remember to come back to this window to continue and sign your form.
continue button field: feewaiverapp_preview_question    
---
#code: |
#  signature_fields = ['users[0].signature']
---
code: |
  # This is a placeholder for the addresses that will be searched
  # for matching address to court. Edit if court venue is based on 
  # a different address than the user's
  [user.address.address for user in users.complete_elements()]
  addresses_to_search = [user.address for user in users.complete_elements()]
---
id: feewaiverapp review screen
event: review_feewaiverapp
question: |
  Review your answers
review:
  - Edit: plaintiffs.revisit
    button: |
      **Plaintiffs**

      % for item in plaintiffs:
        * ${ item }
      % endfor
  - Edit: court_superior
    button: |
      **Is this court case in Superior Court?**:
      ${ word(yesno(court_superior)) }
  - Edit: court_district
    button: |
      **Is this court case in District Court?**:
      ${ word(yesno(court_district)) }
  - Edit: courts.revisit
    button: |
      **Courts**

      % for item in courts:
        * ${ item }
      % endfor
  - Edit: court_town
    button: |
      **What is the name of the town where the court is located?**:
      ${ court_town }
  - Edit: docket_number
    button: |
      **Docket number**:
      ${ docket_number }
  - Edit: defendants.revisit
    button: |
      **Defendants**

      % for item in defendants:
        * ${ item }
      % endfor
  - Edit: user_is_plaintiff
    button: |
      **Did you start this court case?**:
      ${ word(yesno(user_is_plaintiff)) }
  - Edit: user_is_defendant
    button: |
      **Are you responding to a court case someone else started?**:
      ${ word(yesno(user_is_defendant)) }
  - Edit: filing_fee
    button: |
      **Do you need the court filing fee waived?**:
      ${ word(yesno(filing_fee)) }
  - Edit: service_costs
    button: |
      **Do you need the service costs waived?**:
      ${ word(yesno(service_costs)) }
  - Edit: mediation_fee
    button: |
      **Do you need the mediation fee waived?**:
      ${ word(yesno(mediation_fee)) }
  - Edit: jury_fee
    button: |
      **Do you need the jury fee waived?**:
      ${ word(yesno(jury_fee)) }
  - Edit: other_fee_description
    button: |
      **Please describe the other fees or costs you need the court to waive.**:
      ${ other_fee_description }
  - Edit: appeal_fee
    button: |
      **Do you need the appeal fee waived?**:
      ${ word(yesno(appeal_fee)) }
  - Edit: other_fee
    button: |
      **Are there other fees you need waived?**:
      ${ word(yesno(other_fee)) }
  - Edit: no_service_by_mail
    button: |
      **Are you asking the court to pay the cost of service without first trying service by mail?**:
      ${ word(yesno(no_service_by_mail)) }
  - Edit: no_service_by_mail_reason
    button: |
      **Please explain why you are asking the court to pay service fees without first trying service by mail.**:
      > ${ single_paragraph(no_service_by_mail_reason) }
  - Edit: user_work_number
    button: |
      **Work Telephone**:
      ${ user_work_number }
  - Edit: employer_name
    button: |
      **Employer name**:
      ${ employer_name }
  - Edit: user_is_employed
    button: |
      **Are you employed?**:
      ${ word(yesno(user_is_employed)) }
  - Edit: employer_address_on_one_line
    button: |
      **Employer address**:
      ${ employer_address_on_one_line }
  - Edit: user_gross_pay
    button: |
      **What is your gross pay?**:
      ${ currency(user_gross_pay) }
  - Edit: user_pay_salary
    button: |
      **Are you paid a salary?**:
      ${ word(yesno(user_pay_salary)) }
  - Edit: user_salary_paid_weekly
    button: |
      **Paid weekly**:
      ${ word(yesno(user_salary_paid_weekly)) }
  - Edit: user_salary_paid_biweekly
    button: |
      **Paid biweekly**:
      ${ word(yesno(user_salary_paid_biweekly)) }
  - Edit: user_salary_paid_monthly
    button: |
      **Paid monthly**:
      ${ word(yesno(user_salary_paid_monthly)) }
  - Edit: user_salary_paid_other_term
    button: |
      **Payment schedule**:
      ${ user_salary_paid_other_term }
  - Edit: user_salary_paid_other
    button: |
      **Paid on another schedule**:
      ${ word(yesno(user_salary_paid_other)) }
  - Edit: user_hourly_wage
    button: |
      **User hourly wage**:
      ${ user_hourly_wage }
  - Edit: user_hours_worked
    button: |
      **User hours worked**:
      ${ user_hours_worked }
  - Edit: user_pay_wages
    button: |
      **Are you paid hourly wages?**:
      ${ word(yesno(user_pay_wages)) }
  - Edit: user_hours_worked_weekly
    button: |
      **Weekly hours worked**:
      ${ word(yesno(user_hours_worked_weekly)) }
  - Edit: user_hours_worked_biweekly
    button: |
      **Biweekly hours worked**:
      ${ word(yesno(user_hours_worked_biweekly)) }
  - Edit: user_hours_worked_monthly
    button: |
      **Monthly hours worked**:
      ${ word(yesno(user_hours_worked_monthly)) }
  - Edit: user_hours_worked_other_term
    button: |
      **Other term you worked?**:
      ${ user_hours_worked_other_term }
  - Edit: user_hours_worked_other
    button: |
      **Other term hours worked**:
      ${ word(yesno(user_hours_worked_other)) }
  - Edit: user_gets_benefits
    button: |
      **Do you get any benefits?**:
      ${ word(yesno(user_gets_benefits)) }
  - Edit: benefits_unemployment
    button: |
      **Unemployment**:
      ${ word(yesno(benefits_unemployment)) }
  - Edit: benefits_social_security
    button: |
      **Social Security**:
      ${ word(yesno(benefits_social_security)) }
  - Edit: benefits_tanf
    button: |
      **TANF**:
      ${ word(yesno(benefits_tanf)) }
  - Edit: benefits_spousal_child_support
    button: |
      **Spousal or Child Support**:
      ${ word(yesno(benefits_spousal_child_support)) }
  - Edit: benefits_other
    button: |
      **Other benefits**:
      ${ word(yesno(benefits_other)) }
  - Edit: benefits_other_text
    button: |
      **What other benefits?**:
      ${ benefits_other_text }
  - Edit: benefits_total_value
    button: |
      **Benefits total value**:
      ${ currency(benefits_total_value) }
  - Edit: benefits_time_weekly
    button: |
      **I get this amount in benefits weekly**:
      ${ word(yesno(benefits_time_weekly)) }
  - Edit: benefits_time_biweekly
    button: |
      **I get this amount in benefits biweekly**:
      ${ word(yesno(benefits_time_biweekly)) }
  - Edit: benefits_time_monthly
    button: |
      **I get this amount in benefits monthly**:
      ${ word(yesno(benefits_time_monthly)) }
  - Edit: benefits_time_other
    button: |
      **I get this amount in benefits on another schedule**:
      ${ word(yesno(benefits_time_other)) }
  - Edit: benefits_time_other_term
    button: |
      **I get these benefits on this schedule**:
      ${ benefits_time_other_term }
  - Edit: asset_cash_bail
    button: |
      **Cash Bail you have paid in this case**:
      ${ word(yesno(asset_cash_bail)) }
  - Edit: asset_cash_bail_amount
    button: |
      **Amount of cash bail you paid in this case**:
      ${ currency(asset_cash_bail_amount) }
  - Edit: asset_cash_on_hand_amount
    button: |
      **How much cash on hand?**:
      ${ currency(asset_cash_on_hand_amount) }
  - Edit: asset_cash_in_bank_amount
    button: |
      **How much money in the bank?**:
      ${ currency(asset_cash_in_bank_amount) }
  - Edit: asset_owed_money_amount
    button: |
      **How much money are you owed?**:
      ${ currency(asset_owed_money_amount) }
  - Edit: asset_cash_on_hand
    button: |
      **Do you have any cash on hand?**:
      ${ word(yesno(asset_cash_on_hand)) }
  - Edit: asset_cash_in_bank
    button: |
      **Do you have any money in the bank?**:
      ${ word(yesno(asset_cash_in_bank)) }
  - Edit: asset_owed_money
    button: |
      **Does anyone owe you money?**:
      ${ word(yesno(asset_owed_money)) }
  - Edit: asset_user_owns_house
    button: |
      **Do you own a house?**:
      ${ word(yesno(asset_user_owns_house)) }
  - Edit: asset_user_owns_house_value
    button: |
      **What is the value of the house you own?**:
      ${ currency(asset_user_owns_house_value) }
  - Edit: asset_user_owns_house_amount_owed
    button: |
      **How much do you still owe on the house?**:
      ${ currency(asset_user_owns_house_amount_owed) }
  - Edit: asset_user_owns_vehicle_value
    button: |
      **How much is the vehicle worth?**:
      ${ currency(asset_user_owns_vehicle_value) }
  - Edit: asset_user_owns_stocks_value
    button: |
      **How much are your stocks worth?**:
      ${ currency(asset_user_owns_stocks_value) }
  - Edit: asset_user_owns_vehicle
    button: |
      **Do you own a vehicle?**:
      ${ word(yesno(asset_user_owns_vehicle)) }
  - Edit: asset_user_owns_stocks
    button: |
      **Do you own stocks?**:
      ${ word(yesno(asset_user_owns_stocks)) }
  - Edit: asset_user_owns_recreational_vehicle
    button: |
      **Do you own any recreational vehicles (like boats or ATVs)?**:
      ${ word(yesno(asset_user_owns_recreational_vehicle)) }
  - Edit: asset_user_owns_recreational_vehicle_value
    button: |
      **How much are any recreational vehicles you own worth?**:
      ${ currency(asset_user_owns_recreational_vehicle_value) }
  - Edit: asset_user_owns_other_text
    button: |
      **What other valuables do you have?**:
      ${ asset_user_owns_other_text }
  - Edit: asset_user_owns_other_value
    button: |
      **How much are those other valuables worth?**:
      ${ currency(asset_user_owns_other_value) }
  - Edit: asset_user_owns_other
    button: |
      **Do you have any other valuables worth $250 or more?**:
      ${ word(yesno(asset_user_owns_other)) }
  - Edit: expense_mortgage
    button: |
      **Do you pay a mortgage?**:
      ${ word(yesno(expense_mortgage)) }
  - Edit: expense_child_support
    button: |
      **Do you pay child support?**:
      ${ word(yesno(expense_child_support)) }
  - Edit: expense_utilities
    button: |
      **Do you pay utilities?**:
      ${ word(yesno(expense_utilities)) }
  - Edit: expense_mortgage_amount
    button: |
      **Monthly mortgage amount**:
      ${ currency(expense_mortgage_amount) }
  - Edit: expense_child_support_amount
    button: |
      **Monthly child support amount**:
      ${ currency(expense_child_support_amount) }
  - Edit: expense_utilities_amount
    button: |
      **Monthly utilities amount**:
      ${ currency(expense_utilities_amount) }
  - Edit: expense_food
    button: |
      **Food costs?**:
      ${ word(yesno(expense_food)) }
  - Edit: expense_cable
    button: |
      **Cable costs?**:
      ${ word(yesno(expense_cable)) }
  - Edit: expense_credit_card
    button: |
      **Credit card payments?**:
      ${ word(yesno(expense_credit_card)) }
  - Edit: expense_food_amount
    button: |
      **Monthly food costs**:
      ${ currency(expense_food_amount) }
  - Edit: expense_cable_amount
    button: |
      **Monthly cable costs**:
      ${ currency(expense_cable_amount) }
  - Edit: expense_credit_card_amount
    button: |
      **Monthly credit card payments**:
      ${ currency(expense_credit_card_amount) }
  - Edit: expense_loans
    button: |
      **Loan payments?**:
      ${ word(yesno(expense_loans)) }
  - Edit: expense_heat
    button: |
      **Heating costs?**:
      ${ word(yesno(expense_heat)) }
  - Edit: expense_rent
    button: |
      **Do you pay rent?**:
      ${ word(yesno(expense_rent)) }
  - Edit: expense_loans_amount
    button: |
      **Monthly loan payments**:
      ${ currency(expense_loans_amount) }
  - Edit: expense_heat_amount
    button: |
      **Monthly heating costs**:
      ${ currency(expense_heat_amount) }
  - Edit: expense_rent_amount
    button: |
      **Monthly rent amount**:
      ${ currency(expense_rent_amount) }
  - Edit: expense_cell_phone
    button: |
      **Cell phone costs?**:
      ${ word(yesno(expense_cell_phone)) }
  - Edit: expense_other
    button: |
      **Other expenses?**:
      ${ word(yesno(expense_other)) }
  - Edit: expense_cell_phone_amount
    button: |
      **Monthly cell phone costs**:
      ${ currency(expense_cell_phone_amount) }
  - Edit: expense_other_text
    button: |
      **What other expenses do you have?**:
      ${ expense_other_text }
  - Edit: expense_other_amount
    button: |
      **What is the monthly amount of any other expenses you have?**:
      ${ currency(expense_other_amount) }
  - Edit: number_children_live_with_user
    button: |
      **How many children live with you?**:
      ${ number_children_live_with_user }
  - Edit: children_live_with_user
    button: |
      **Do any children live with you?**:
      ${ word(yesno(children_live_with_user)) }
  - Edit: user_pays_child_support_for_number_of_children
    button: |
      **How many children do you pay child support for?**:
      ${ user_pays_child_support_for_number_of_children }
  - Edit: user_pays_child_support_amount
    button: |
      **How much child support do you pay?**:
      ${ currency(user_pays_child_support_amount) }
  - Edit: user_pays_child_support
    button: |
      **Do you pay child support?**:
      ${ word(yesno(user_pays_child_support)) }
  - Edit: child_support_paid_other_schedule_term
    button: |
      **What other schedule do you pay your child support on?**:
      ${ child_support_paid_other_schedule_term }
  - Edit: child_support_paid_weekly
    button: |
      **Child support paid weekly**:
      ${ word(yesno(child_support_paid_weekly)) }
  - Edit: child_support_paid_biweekly
    button: |
      **Child support paid biweekly**:
      ${ word(yesno(child_support_paid_biweekly)) }
  - Edit: child_support_paid_monthly
    button: |
      **Child support paid monthly**:
      ${ word(yesno(child_support_paid_monthly)) }
  - Edit: child_support_paid_other_schedule
    button: |
      **Child support paid on another schedule**:
      ${ word(yesno(child_support_paid_other_schedule)) }
  - Edit: user_lives_alone
    button: |
      **Do you live alone?**:
      ${ word(yesno(user_lives_alone)) }
  - Edit: user_lives_with_someone
    button: |
      **Do you live with anyone?**:
      ${ word(yesno(user_lives_with_someone)) }
  - Edit: user_lives_with_spouse
    button: |
      **Lives with spouse**:
      ${ word(yesno(user_lives_with_spouse)) }
  - Edit: user_lives_with_friend
    button: |
      **Lives with friend**:
      ${ word(yesno(user_lives_with_friend)) }
  - Edit: user_lives_with_parent
    button: |
      **Lives with parent(s)**:
      ${ word(yesno(user_lives_with_parent)) }
  - Edit: user_lives_with_other
    button: |
      **Lives with others**:
      ${ word(yesno(user_lives_with_other)) }
  - Edit: user_lives_with_other_text
    button: |
      **Who do you live with?**:
      ${ user_lives_with_other_text }
  - Edit: shared_living_expenses_amount
    button: |
      **How much do others contribute to your shared living expenses?**:
      ${ (shared_living_expenses_amount) }
  - Edit: user_shares_living_expenses
    button: |
      **Do you share living expenses with those you live with?**:
      ${ word(yesno(user_shares_living_expenses)) }
  - Edit: shared_living_expenses_other_term
    button: |
      **What other schedule do you use for sharing living expenses?**:
      ${ shared_living_expenses_other_term }
  - Edit: shared_living_expenses_weekly
    button: |
      **They contribute to expenses weekly**:
      ${ word(yesno(shared_living_expenses_weekly)) }
  - Edit: shared_living_expenses_biweekly
    button: |
      **They contribute to expenses biweekly**:
      ${ word(yesno(shared_living_expenses_biweekly)) }
  - Edit: shared_living_expenses_monthly
    button: |
      **They contribute to expenses monthly**:
      ${ word(yesno(shared_living_expenses_monthly)) }
  - Edit: shared_living_expenses_other
    button: |
      **They contribute to expenses on  another schedule**:
      ${ word(yesno(shared_living_expenses_other)) }
  
  - Edit: users.revisit
    button: |
      **Users**

      % for item in users:
        * ${ item }
      % endfor
  - Edit: signature_date
    button: |
      **Date of signature**:
      ${ signature_date }
---
continue button field: plaintiffs.revisit
question: |
  Edit plaintiffs
subquestion: |
  ${ plaintiffs.table }

  ${ plaintiffs.add_action() }
---
table: plaintiffs.table
rows: plaintiffs
columns:
  - Name: |
      row_item.name.full() if defined("row_item.name.first") else ""
edit:
  - name.first
confirm: True

---
continue button field: courts.revisit
question: |
  Edit courts
subquestion: |
  ${ courts.table }

  ${ courts.add_action() }
---
table: courts.table
rows: courts
columns:
  - Address: |
      row_item.address.block() if defined("row_item.address.county") else ""
edit:
  - address.county
confirm: True

---
continue button field: defendants.revisit
question: |
  Edit defendants
subquestion: |
  ${ defendants.table }

  ${ defendants.add_action() }
---
table: defendants.table
rows: defendants
columns:
  - Name: |
      row_item.name.full() if defined("row_item.name.first") else ""
edit:
  - name.first
confirm: True

---
continue button field: users.revisit
question: |
  Edit users
subquestion: |
  ${ users.table }

  ${ users.add_action() }
---
table: users.table
rows: users
columns:
  - Signature: |
      row_item.signature if defined("row_item.signature") else ""
  - Address: |
      row_item.address.block() if defined("row_item.address.address") else ""
  - Phone number: |
      row_item.phone_number if defined("row_item.phone_number") else ""
  - Email: |
      row_item.email if defined("row_item.email") else ""
edit:
  - signature
  - address.address
  - phone_number
  - email
confirm: True

---
id: download feewaiverapp
event: feewaiverapp_download
question: |
  All done
subquestion: |
  Thank you ${users}. Your form is ready to download and deliver.
  
  View, download and send your form below. Click the "Edit answers" button to fix any mistakes.

  ${ action_button_html(url_action('review_feewaiverapp'), label='Edit answers', color='info') }
  
  
  ${ al_user_bundle.download_list_html() }
  

  ${ al_user_bundle.send_button_html(show_editable_checkbox=False) }

progress: 100
---
# ALDocument objects specify the metadata for each template
objects:
  - feewaiverapp_Post_interview_instructions: ALDocument.using(title="Instructions", filename="feewaiverapp_next_steps.docx", enabled=True, has_addendum=False)
  - feewaiverapp_attachment: ALDocument.using(title="Maine Fee Waiver Application", filename="feewaiverapp", enabled=True, has_addendum=False, )
---
# Bundles group the ALDocuments into separate downloads, such as for court and for the user
#objects:
#  - al_user_bundle: ALDocumentBundle.using(elements=[feewaiverapp_Post_interview_instructions, feewaiverapp_attachment], filename="feewaiverapp", title="All forms to download for your records", enabled=True)
#  - al_court_bundle: ALDocumentBundle.using(elements=[feewaiverapp_attachment],  filename="feewaiverapp", title="All forms to deliver to court", enabled=True)
---
# Each attachment defines a key in an ALDocument. We use `i` as the placeholder here so the same template is 
# used for "preview" and "final" keys, and logic in the template checks the value of 
# `i` to show or hide the user's signature
attachment:
  name: Post-interview-Instructions
  filename: feewaiverapp_next_steps
  docx template file: feewaiverapp_next_steps.docx
  variable name: feewaiverapp_Post_interview_instructions[i]
  skip undefined: True
---
attachment:
  name: feewaiverapp
  filename: feewaiverapp
  variable name: feewaiverapp_attachment[i]
  skip undefined: True
  pdf template file: feewaiverapp_maine_clean_labeled.pdf
  fields:
      - "plaintiffs_name": ${ plaintiffs[0] }
      - "plaintiffs1_name": ${ plaintiffs[1] }
      - "court_superior": ${ court_superior }
      - "court_district": ${ court_district }
      - "court_county": ${ court_data.loc[court_data['address_town'] == court_town, 'address_county'].values[0] }
      - "court_town": ${ court_town }
      - "docket_number": ${ docket_number }
      - "defendants_name": ${ defendants[0] }
      - "defendants1_name": ${ defendants[1] }
      - "user_is_plaintiff": ${ user_is_plaintiff }
      - "user_is_defendant": ${ user_is_defendant }
      - "filing_fee": ${ filing_fee }
      - "service_costs": ${ service_costs }
      - "mediation_fee": ${ mediation_fee }
      - "jury_fee": ${ jury_fee }
      - "other_fee_description": ${ other_fee_description }
      - "appeal_fee": ${ appeal_fee }
      - "other_fee": ${ other_fee }
      - "no_service_by_mail": ${ no_service_by_mail }
      - "no_service_by_mail_reason": ${ no_service_by_mail_reason }
      - "user_signature": ${ user_signature }
      - "signature_date": ${ signature_date }
      - "user_address_line_one": ${ users[0].address.line_one() }
      - "user_address_line_two": ${ users[0].address.line_two() }
      - "user_phone_number": ${ users[0].mobile_number }
      - "user_email": ${ users[0].email }
---
# ALDocument objects specify the metadata for each template
objects:
  - mainefinancialaffidavit_Post_interview_instructions: ALDocument.using(title="Instructions", filename="feewaiverpacket_next_steps.docx", enabled=True, has_addendum=False)
  - mainefinancialaffidavit_attachment: ALDocument.using(title="Maine Financial Affidavit", filename="mainefinancialaffidavit", enabled=True, has_addendum=False, )
---
# Bundles group the ALDocuments into separate downloads, such as for court and for the user
objects:
  - al_user_bundle: ALDocumentBundle.using(elements=[mainefinancialaffidavit_Post_interview_instructions, mainefinancialaffidavit_attachment, feewaiverapp_attachment], filename="feewaiverbundle", title="All forms to download for your records", enabled=True)
  - al_court_bundle: ALDocumentBundle.using(elements=[mainefinancialaffidavit_attachment, feewaiverapp_attachment],  filename="feewaiverbundle", title="All forms to deliver to court", enabled=True)
#  - al_user_bundle_two: ALDocumentBundle.using(elements=[feewaiverapp_Post_interview_instructions, feewaiverapp_attachment], filename="feewaiverapp", title="All forms to download for your records", enabled=True)
#  - al_court_bundle_two: ALDocumentBundle.using(elements=[feewaiverapp_attachment],  filename="feewaiverapp", title="All forms to deliver to court", enabled=True)
---
# Each attachment defines a key in an ALDocument. We use `i` as the placeholder here so the same template is 
# used for "preview" and "final" keys, and logic in the template checks the value of 
# `i` to show or hide the user's signature
attachment:
  name: Post-interview-Instructions
  filename: mainefinancialaffidavit_next_steps
  docx template file: mainefinancialaffidavit_next_steps.docx
  variable name: mainefinancialaffidavit_Post_interview_instructions[i]
  skip undefined: True
---
attachment:
  name: mainefinancialaffidavit
  filename: mainefinancialaffidavit
  variable name: mainefinancialaffidavit_attachment[i]
  skip undefined: True
  pdf template file: mainefinancialaffidavit.pdf
  fields:
      - "plaintiffs_name": ${ plaintiffs[0] }
      - "plaintiffs1_name": ${ plaintiffs[1] }
      - "court_county": ${ court_data.loc[court_data['address_town'] == court_town, 'address_county'].values[0] }
      - "court_town": ${ court_town }
      - "court_superior": ${ court_superior }
      - "court_district": ${ court_district }
      #- "court_criminal": ${ court_type == "criminal" }
      - "docket_number": ${ docket_number }
      - "defendants_name": ${ defendants[0] }
      - "defendants1_name": ${ defendants[1] }
      - "user_name": ${ users[0] }
      - "support_fee_waiver": ${ support_fee_waiver }
      #- "support_other_text": ${ support_other_text }
      #- "support_other": ${ support_fee_waiver }
      - "user_address_on_one_line": ${ users[0].address.on_one_line() }
      - "users_birthdate": ${ users[0].birthdate.format() }
      - "user_phone_number": ${ users[0].phone_number }
      - "user_mobile_number": ${ users[0].mobile_number }
      - "user_work_number": ${ user_work_number }
      - "user_email": ${ users[0].email }
      - "employer_name": ${ employer_name }
      - "user_is_employed": ${ user_is_employed }
      - "employer_address_on_one_line": ${ employer_address_on_one_line }
      - "user_gross_pay": ${ (user_gross_pay) }
      - "user_pay_salary": ${ user_pay_salary }
      - "user_salary_paid_weekly": ${ pay_period_salary == "user_salary_paid_weekly" }
      - "user_salary_paid_biweekly": ${ pay_period_salary == "user_salary_paid_biweekly" }
      - "user_salary_paid_monthly": ${ pay_period_salary == "user_salary_paid_monthly" }
      - "user_salary_paid_other_term": ${ user_salary_paid_other_term }
      - "user_salary_paid_other": ${ pay_period_salary == "user_salary_paid_other" }
      - "user_hourly_wage": ${ user_hourly_wage }
      - "user_hours_worked": ${ user_hours_worked }
      - "user_pay_wages": ${ user_pay_wages }
      - "user_hours_worked_weekly": ${ pay_period_wage == "user_hours_worked_weekly" }
      - "user_hours_worked_biweekly": ${ pay_period_wage == "user_hours_worked_biweekly" }
      - "user_hours_worked_monthly": ${ pay_period_wage == "user_hours_worked_monthly" }
      - "user_hours_worked_other_term": ${ user_hours_worked_other_term }
      - "user_hours_worked_other": ${ pay_period_wage == "user_hours_worked_other" }
      - "user_gets_benefits": ${ user_gets_benefits }
      - "benefits_unemployment": ${ user_benefits_selection["benefits_unemployment"] == True }
      - "benefits_social_security": ${ user_benefits_selection["benefits_social_security"] == True }
      - "benefits_tanf": ${ user_benefits_selection["benefits_tanf"] == True }
      - "benefits_spousal_child_support": ${ user_benefits_selection["benefits_spousal_child_support"] == True }
      - "benefits_other": ${ user_benefits_selection["benefits_other"] == True }
      - "benefits_other_text": ${ benefits_other_text }
      - "benefits_total_value": ${ (benefits_total_value) }
      - "benefits_time_weekly": ${ user_benefits_schedule == "benefits_time_weekly" }
      - "benefits_time_biweekly": ${ user_benefits_schedule == "benefits_time_biweekly" }
      - "benefits_time_monthly": ${ user_benefits_schedule == "benefits_time_monthly" }
      - "benefits_time_other": ${ user_benefits_schedule == "benefits_time_other" }
      - "benefits_time_other_term": ${ benefits_time_other_term }
      - "asset_cash_bail": ${ asset_cash_bail }
      - "asset_cash_bail_amount": ${ (asset_cash_bail_amount) }
      - "asset_cash_on_hand_amount": ${ (asset_cash_on_hand_amount) }
      - "asset_cash_in_bank_amount": ${ (asset_cash_in_bank_amount) }
      - "asset_owed_money_amount": ${ (asset_owed_money_amount) }
      - "asset_cash_on_hand": ${ asset_cash_on_hand }
      - "asset_cash_in_bank": ${ asset_cash_in_bank }
      - "asset_owed_money": ${ asset_owed_money }
      - "asset_user_owns_house": ${ asset_user_owns_house }
      - "asset_user_owns_house_value": ${ (asset_user_owns_house_value) }
      - "asset_user_owns_house_amount_owed": ${ (asset_user_owns_house_amount_owed) }
      - "asset_user_owns_vehicle_value": ${ (asset_user_owns_vehicle_value) }
      - "asset_user_owns_stocks_value": ${ (asset_user_owns_stocks_value) }
      - "asset_user_owns_vehicle": ${ asset_user_owns_vehicle }
      - "asset_user_owns_stocks": ${ asset_user_owns_stocks }
      - "asset_user_owns_recreational_vehicle": ${ asset_user_owns_recreational_vehicle }
      - "asset_user_owns_recreational_vehicle_value": ${ (asset_user_owns_recreational_vehicle_value) }
      - "asset_user_owns_other_text": ${ asset_user_owns_other_text }
      - "asset_user_owns_other_value": ${ (asset_user_owns_other_value) }
      - "asset_user_owns_other": ${ asset_user_owns_other }
      - "expense_mortgage": ${ expense_mortgage }
      - "expense_child_support": ${ expense_child_support }
      - "expense_utilities": ${ expense_utilities }
      - "expense_mortgage_amount": ${ (expense_mortgage_amount) }
      - "expense_child_support_amount": ${ (expense_child_support_amount) }
      - "expense_utilities_amount": ${ (expense_utilities_amount) }
      - "expense_food": ${ expense_food }
      - "expense_cable": ${ expense_cable }
      - "expense_credit_card": ${ expense_credit_card }
      - "expense_food_amount": ${ (expense_food_amount) }
      - "expense_cable_amount": ${ (expense_cable_amount) }
      - "expense_credit_card_amount": ${ (expense_credit_card_amount) }
      - "expense_loans": ${ expense_loans }
      - "expense_heat": ${ expense_heat }
      - "expense_rent": ${ expense_rent }
      - "expense_loans_amount": ${ (expense_loans_amount) }
      - "expense_heat_amount": ${ (expense_heat_amount) }
      - "expense_rent_amount": ${ (expense_rent_amount) }
      - "expense_cell_phone": ${ expense_cell_phone }
      - "expense_other": ${ expense_other }
      - "expense_cell_phone_amount": ${ (expense_cell_phone_amount) }
      - "expense_other_text": ${ expense_other_text }
      - "expense_other_amount": ${ (expense_other_amount) }
      - "number_children_live_with_user": ${ number_children_live_with_user }
      - "children_live_with_user": ${ children_live_with_user }
      - "user_pays_child_support_for_number_of_children": ${ user_pays_child_support_for_number_of_children }
      - "user_pays_child_support_amount": ${ (user_pays_child_support_amount) }
      - "user_pays_child_support": ${ expense_child_support }
      - "child_support_paid_other_schedule_term": ${ child_support_paid_other_schedule_term }
      - "child_support_paid_weekly": ${ child_support_schedule == "child_support_paid_weekly" }
      - "child_support_paid_biweekly": ${ child_support_schedule == "child_support_paid_biweekly" }
      - "child_support_paid_monthly": ${ child_support_schedule == "child_support_paid_monthly" }
      - "child_support_paid_other_schedule": ${ child_support_schedule == "child_support_paid_other_schedule" }
      - "user_lives_alone": ${ user_lives_alone }
      - "user_lives_with_someone": ${user_household_children_plus_adults == True }
      - "user_lives_with_spouse": ${ user_housemate_selection["user_lives_with_spouse"] == True }
      - "user_lives_with_friend": ${ user_housemate_selection["user_lives_with_friend"] == True }
      - "user_lives_with_parent": ${ user_housemate_selection["user_lives_with_parent"] == True }
      - "user_lives_with_other": ${ user_housemate_selection["user_lives_with_other"] }
      - "user_lives_with_other_text": ${ user_lives_with_other_text }
      - "shared_living_expenses_amount": ${ (shared_living_expenses_amount) }
      - "user_shares_living_expenses": ${ user_shares_living_expenses }
      - "shared_living_expenses_other_term": ${ shared_living_expenses_other_term }
      - "shared_living_expenses_weekly": ${ shared_living_expenses_schedule == "shared_living_expenses_weekly" }
      - "shared_living_expenses_biweekly": ${ shared_living_expenses_schedule == "shared_living_expenses_biweekly" }
      - "shared_living_expenses_monthly": ${ shared_living_expenses_schedule == "shared_living_expenses_monthly" }
      - "shared_living_expenses_other": ${ shared_living_expenses_schedule == "shared_living_expenses_other" }
      - "acknowledge_form_terms": ${ acknowledge_form_terms }
      - "truthfulness_check": ${ truthfulness_check }
      - "signature_date": ${ signature_date }
---

